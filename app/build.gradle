plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services' apply false  // Disabled by default
    id 'com.google.firebase.crashlytics'
    id 'com.diffplug.spotless' version '6.25.0'
}

android {
    namespace 'com.example.goalguru'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.goalguru"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file('release.keystore')
            storePassword System.getenv('STORE_PASSWORD')
            keyAlias System.getenv('KEY_ALIAS')
            keyPassword System.getenv('KEY_PASSWORD')
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            // Enable Firebase for release
            apply plugin: 'com.google.gms.google-services'
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            signingConfig signingConfigs.debug
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            // Manual Firebase config for debug
            resValue "string", "google_app_id", "1:1234567890:android:1234567890abcdef"
            resValue "string", "google_api_key", "your_api_key"
            resValue "string", "firebase_database_url", "https://your-app.firebaseio.com"
            resValue "string", "gcm_defaultSenderId", "1234567890"
            resValue "string", "google_storage_bucket", "your-app.appspot.com"
            resValue "string", "project_id", "your-app-id"
        }
    }

    flavorDimensions "environment"
    productFlavors {
        dev {
            dimension "environment"
            resValue "string", "app_name", "GoalGuru Dev"
        }
        prod {
            dimension "environment"
            resValue "string", "app_name", "GoalGuru"
        }
    }

    // ... keep all your existing compileOptions, kotlinOptions, buildFeatures etc. ...

    applicationVariants.all { variant ->
        // Only apply google-services plugin to non-debug variants
        if (variant.buildType.name != "debug") {
            variant.outputs.each { output ->
                def processTask = output.getProcessResourcesProvider().get()
                processTask.doFirst {
                    android.applicationVariants.all { v ->
                        if (v.name == variant.name) {
                            project.plugins.apply('com.google.gms.google-services')
                        }
                    }
                }
            }
        }
    }
}

// ... keep all your existing spotless, dependencies, and kapt configurations ...

// Apply google-services plugin only for release builds
afterEvaluate {
    if (!getGradle().getStartParameter().getTaskRequests().toString().contains("Debug")) {
        apply plugin: 'com.google.gms.google-services'
    }
}
