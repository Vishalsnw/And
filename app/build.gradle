plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.diffplug.spotless'
}

android {
    namespace 'com.example.goalguru'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.goalguru"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        debug {
            firebaseCrashlytics.mappingFileUploadEnabled = false
            applicationIdSuffix ".debug"
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
            '-opt-in=kotlin.RequiresOptIn',
            '-Xjvm-default=all',
            '-Xskip-prerelease-check'
        ]
    }

    buildFeatures {
        compose true
        viewBinding true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.8'
    }

    packagingOptions {
        resources.excludes += '/META-INF/{AL2.0,LGPL2.1}'
        jniLibs.useLegacyPackaging = false
    }

    kapt {
        correctErrorTypes = true
        useBuildCache = true
        javacOptions {
            option("-Xmaxerrs", 1000)
            option("-Adagger.fastInit=ENABLED")
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

spotless {
    kotlin {
        target '**/*.kt'
        ktlint("0.50.0").editorConfigOverride([
            'indent_size': '4',
            'max_line_length': '120',
            'disabled_rules': 'no-wildcard-imports',
            'ktlint_standard_no-unit-return': 'disabled'
        ])
        licenseHeaderFile rootProject.file('spotless/copyright.kt')
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
    format 'xml', {
        target '**/*.xml'
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
}

dependencies {
    // Core Android
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'

    // Compose
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation platform('androidx.compose:compose-bom:2024.02.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.navigation:navigation-compose:2.7.6'
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.32.0'
    implementation 'com.airbnb.android:lottie-compose:6.1.0'

    // Dependency Injection
    implementation 'com.google.dagger:hilt-android:2.48'
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'
    kapt 'com.google.dagger:hilt-compiler:2.48'
    kapt 'androidx.hilt:hilt-compiler:1.1.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.2')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'

    // Networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    // Database
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1'

    // DataStore
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // WorkManager
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    implementation 'androidx.hilt:hilt-work:1.1.0'

    // Charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // Error-prone
    compileOnly 'com.google.errorprone:error_prone_annotations:2.18.0'
    kapt 'com.google.errorprone:error_prone:2.18.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.02.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}
