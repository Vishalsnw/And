name: Android CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '**.gitignore'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚙️ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: 📱 Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: 🔍 Check for Wildcard Imports
        id: wildcard-check
        run: |
          if grep -rE '^import .*\.\*$' app/src/main/java; then
            echo "wildcards_found=true" >> $GITHUB_OUTPUT
          else
            echo "wildcards_found=false" >> $GITHUB_OUTPUT
          fi

      - name: 🛠 Fix Wildcard Imports (if needed)
        if: steps.wildcard-check.outputs.wildcards_found == 'true'
        run: |
          find app/src/main/java -name "*.kt" -exec sed -i '/^import .*\.\*$/d' {} +
          ./gradlew spotlessApply

      - name: ✨ Run Spotless Formatting
        run: ./gradlew spotlessApply --no-daemon

      - name: 💾 Commit Code Style Fixes
        if: always()
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "🎨 Auto-formatted code" && git push)
        continue-on-error: true

      - name: 🧹 Clean Project
        run: ./gradlew clean --no-daemon

      - name: 🔧 Build Debug APK
        run: ./gradlew assembleDebug --stacktrace --no-daemon

      - name: 🔍 Analyze Build Output
        run: |
          ./gradlew build --no-daemon > build.log 2>&1 || true
          grep -E 'error|exception|failed|Caused by|not found|unresolved|compilation|kapt|spotless' build.log > errors.log || echo "No errors found" > errors.log
          echo "Build completed at $(date)" >> summary.log
          echo "Last commit: $(git log -1 --pretty=%B)" >> summary.log

      - name: 📦 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.run_number }}
          path: |
            app/build/outputs/apk/debug/*.apk
            build.log
            errors.log
            summary.log
          if-no-files-found: warn

      - name: 📊 Post Job Summary
        if: always()
        run: |
          echo "### Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          cat summary.log >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Error Summary" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          cat errors.log >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
