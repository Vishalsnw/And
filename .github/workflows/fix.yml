name: Android APK Build & Syntax Fix

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: ⚙️ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: 📱 Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: 🧹 Create fix_wildcards.sh
        run: |
          cat <<'EOF' > fix_wildcards.sh
          #!/bin/bash
          SRC_DIR="app/src/main/java/com/example/goalguru"

          find "$SRC_DIR" -name "*.kt" | while read file; do
              WILDCARDS=$(grep -E '^import .*\.\*$' "$file" || true)
              if [ -z "$WILDCARDS" ]; then continue; fi
              IMPORTS=""
              echo "$WILDCARDS" | while read import_line; do
                  base_pkg=$(echo "$import_line" | sed -E 's/import (.*)\.\*/\1/')
                  used_classes=$(grep -oP "${base_pkg//./\\.}\\.[A-Z][A-Za-z0-9_]*" "$file" | sort | uniq | sed "s|$base_pkg\.||g")
                  sed -i "\|$import_line|d" "$file"
                  for cls in $used_classes; do
                      IMPORTS+="import $base_pkg.$cls"$'\n'
                  done
              done
              if [ -n "$IMPORTS" ]; then
                  tmpfile=$(mktemp)
                  awk -v new_imports="$IMPORTS" '
                  BEGIN { done=0 }
                  {
                      print $0
                      if (!done && /^package /) {
                          print ""
                          print new_imports
                          done=1
                      }
                  }' "$file" > "$tmpfile"
                  mv "$tmpfile" "$file"
              fi
          done
          EOF
          chmod +x fix_wildcards.sh

      - name: 🛠 Run Wildcard Import Fix
        run: ./fix_wildcards.sh

      - name: ✨ Run Spotless Auto Fix
        run: ./gradlew spotlessApply

      - name: 📦 Commit Spotless Fixes (if any)
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -am "🔧 Spotless + wildcard imports fixed"
          git push origin main || echo "No changes to commit"
        continue-on-error: true

      - name: 🧼 Clean Project
        run: ./gradlew clean

      - name: 🏗 Build Debug APK and Save Logs
        run: ./gradlew assembleDebug --stacktrace --info > build_output.txt 2>&1

      - name: 🕵️ Extract Build Errors (Short Summary)
        run: |
          touch error_summary.txt
          grep -iE "error|exception|failed|Caused by|not found|unresolved|compilation|kapt|spotless" build_output.txt >> error_summary.txt || true
          if [ ! -s error_summary.txt ]; then echo "✅ No critical build errors detected." >> error_summary.txt; fi

      - name: ☁️ Upload Error Summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ErrorSummary-${{ github.run_number }}
          path: error_summary.txt

      - name: ☁️ Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: MyApp-APK
          path: app/build/outputs/apk/debug/*.apk
