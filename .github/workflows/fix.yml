name: Android CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '**.gitignore'

env:
  ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üóÑ Cache Android SDK
        uses: actions/cache@v4
        id: android-cache
        with:
          path: |
            ${{ env.ANDROID_SDK_ROOT }}
            ~/.android/cache
          key: ${{ runner.os }}-android-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-android-

      - name: ‚öôÔ∏è Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: üì± Setup Android SDK
        if: steps.android-cache.outputs.cache-hit != 'true'
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 'latest'
          build-tools-version: '34.0.0'
          platform-version: '34'
          disable-emulator: true
          disable-ndk: true
          disable-system-images: true

      - name: üìú Accept Licenses
        run: |
          yes | sdkmanager --licenses
          sdkmanager --update

      - name: üîÑ Update Gradle Wrapper
        run: ./gradlew wrapper --gradle-version 8.2 --distribution-type bin

      - name: ‚ú® Run Spotless
        run: ./gradlew spotlessApply --no-daemon --stacktrace

      - name: üíæ Commit Formatting
        if: always()
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git diff --cached --quiet || \
          (git commit -m "üé® Auto-formatted code [skip ci]" && \
           git pull --rebase && \
           git push)
        continue-on-error: true

      - name: üßπ Clean Project
        run: ./gradlew clean --no-daemon

      - name: üß™ Compile Only (Kotlin)
        run: ./gradlew compileDebugKotlin --no-daemon --stacktrace

      - name: üî® Build APK
        run: ./gradlew assembleDebug --no-daemon --stacktrace

      - name: üîç Analyze Build Logs
        run: |
          ./gradlew build --no-daemon > build.log 2>&1

          echo "### Build Report" > summary.log
          echo "Start: $(date)" >> summary.log
          echo "Finish: $(date)" >> summary.log
          echo "### Errors" >> summary.log
          grep -iE 'error|exception|failed|Caused by|not found|unresolved|compilation|kapt|Room' build.log > errors.log || echo "‚úÖ No critical errors found" > errors.log
          cat errors.log >> summary.log

      - name: üì¶ Upload Build Logs & APK
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.run_number }}
          path: |
            app/build/outputs/apk/debug/*.apk
            build.log
            summary.log
            errors.log
          retention-days: 5

      - name: üìä Job Summary
        if: always()
        run: |
          echo "### üõ†Ô∏è Build Report" >> $GITHUB_STEP_SUMMARY
          echo "**Run:** [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### üìù Summary" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat summary.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### ‚ùå Errors" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat errors.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: ‚ùó Fail if build errors found
        if: always()
        run: |
          if grep -q -i 'error\|exception\|failed\|Caused by\|unresolved' errors.log; then
            echo "‚ùå Build failed due to detected errors."
            exit 1
          fi
